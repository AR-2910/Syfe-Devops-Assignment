apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes auto;
    events {
      worker_connections 1024;
    }
    http {
      include /opt/openresty/nginx/conf/mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
      access_log /dev/stdout main;
      error_log /dev/stderr debug;

      lua_package_path "/opt/openresty/nginx/lua/?.lua;;";
      lua_shared_dict metrics 10M;

      init_by_lua_block {
        local dict = ngx.shared.metrics
        dict:set("requests_total", 0)
        dict:set("errors_5xx_total", 0)
      }

      upstream wordpress {
        server wordpress-svc:80;
      }

      server {
        listen 80;
        server_name _;

        location / {
          access_by_lua_file /opt/openresty/nginx/lua/metrics.lua;
          proxy_pass http://wordpress;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /stub_status {
          stub_status;
          access_log off;
          # For local testing we allow all; tighten in production.
          allow 0.0.0.0/0;
        }

        location /metrics {
          content_by_lua_file /opt/openresty/nginx/lua/metrics.lua;
        }

        location /test {
          content_by_lua_file /opt/openresty/nginx/lua/test.lua;
        }
      }
    }

